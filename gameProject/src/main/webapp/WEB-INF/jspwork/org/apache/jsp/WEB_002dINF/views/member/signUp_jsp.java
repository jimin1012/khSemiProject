/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2024-02-07 00:14:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html >\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<link rel=\"stylesheet\"	href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/board/signUp.css\">\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/font.css\">\r\n");
      out.write("\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"wrap\">\r\n");
      out.write("		<main>\r\n");
      out.write("			<form action=\"signUp\" method=\"POST\" name=\"singUp-form\" onsubmit=\"return signUpValidate()\">\r\n");
      out.write("				<section class=\"signUp-area\">\r\n");
      out.write("\r\n");
      out.write("					<p>회원가입</p>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"main\">\r\n");
      out.write("\r\n");
      out.write("						<table>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>아이디</th>\r\n");
      out.write("								<td style=\"width: 250px;\">\r\n");
      out.write("									<input type=\"text\" id=\"inputIdbox\" name=\"inputIdbox\"\r\n");
      out.write("									placeholder=\"6글자~15글자 (숫자와 영어만 가능)\" style=\"width: 100%;\" maxlength=\"30\">\r\n");
      out.write("								</td>\r\n");
      out.write("								<td>\r\n");
      out.write("									<button type=\"button\" id=\"idCheck-btn\">중복 확인</button>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("							<!-- 비밀번호 -->\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>비밀번호</th>\r\n");
      out.write("								<td>\r\n");
      out.write("									<input type=\"password\" id=\"inputPwbox\" name=\"inputPwbox\"\r\n");
      out.write("									placeholder=\"6글자~15글자 (공백,한글)제외\" maxlength=\"30\">\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("\r\n");
      out.write("							<!-- 비밀번호 확인 -->\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>비밀번호 확인</th>\r\n");
      out.write("								<td>\r\n");
      out.write("									<input type=\"password\" id=\"inputPw2box\" name=\"inputPw2box\"\r\n");
      out.write("									placeholder=\"위 비밀번호를 다시 입력해주세요.\" maxlength=\"30\">\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("\r\n");
      out.write("							\r\n");
      out.write("							<!-- 이름 -->\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>이름</th>\r\n");
      out.write("								<td>\r\n");
      out.write("									<input type=\"text\" id=\"inputNamebox\" name=\"inputNamebox\"\r\n");
      out.write("									placeholder=\"2~5글자, 한글만 입력\" maxlength=\"6\">\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("\r\n");
      out.write("							<!-- 생년월일 -->\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>생년월일</th>\r\n");
      out.write("								<td>\r\n");
      out.write("									<input type=\"text\" id=\"inputDobbox\" name=\"inputDobbox\"\r\n");
      out.write("									placeholder=\"ex) YYYY-MM-DD\" maxlength=\"15\">\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("\r\n");
      out.write("							<!-- 이메일 -->\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>이메일</th>\r\n");
      out.write("								<td>\r\n");
      out.write("									<input type=\"text\" id=\"inputEmailbox\" name=\"inputEmailbox\" placeholder=\"이메일을 입력하세요.\" maxlength=\"40\">\r\n");
      out.write("								</td>\r\n");
      out.write("								<td>\r\n");
      out.write("									<button type=\"button\" id=\"mailSend\">인증번호 받기</button>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td colspan=\"1\"></td>\r\n");
      out.write("								<td><input type=\"text\" id=\"inputEmailAuth\" name=\"inputEmailAuth\" placeholder=\"인증번호를 입력하세요.\" maxlength=\"10\"></td>\r\n");
      out.write("								<td><button type=\"button\" id=\"authBtn\">인증 확인</button></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("\r\n");
      out.write("						</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<button id=\"signUpbtn\" name=\"signUpbtn\">회원가입</button>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				</section>\r\n");
      out.write("				<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.manager}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"managerYN\">\r\n");
      out.write("			</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</main>\r\n");
      out.write("		<!-- 푸터 include  -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		const contextPath = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/signUp.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
